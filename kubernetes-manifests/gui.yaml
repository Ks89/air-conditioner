---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gui-config
  namespace: ac
data:
#  default.conf: |-
#    server {
#      listen 80;
#      listen  [::]:80;
#      server_name  ac-ks89.eu www.ac-ks89.eu;
#      access_log /var/log/nginx/appstore.access.log;
#      error_log /var/log/nginx/appstore.error.log;
#
#      location / {
#        root /etc/nginx/html/html;
#        index  index.html index.htm;
#        try_files $uri $uri/ /index.html;
#      }
#
#      #     error_page  404              /404.html;
#      #     error_page   500 502 503 504  /50x.html;
#      #
#      #     location = /50x.html {
#      #       root   /usr/share/nginx/html;
#      #     }
#
#      location /api {
#        proxy_pass http://api-server-svc.ac.svc.cluster.local:80;
#        proxy_set_header X-Forwarded-For $remote_addr;
#        proxy_set_header Host            $http_host;
#        # Following is necessary for Websocket support
#        #       proxy_http_version 1.1;
#        #       proxy_set_header Upgrade $http_upgrade;
#        #       proxy_set_header Connection "upgrade";
#      }
#    }

  nginx.conf: |-
    events {
        worker_connections 1024;
    }

    http {
      server_tokens off;
      # IMPORTANT: mime.types are required, otherwise react app
      # won't load SVGs and CSS files in the right way
      include /etc/nginx/mime.types;

      server {
        listen 80;
        listen  [::]:80;
        server_name  ac-ks89.eu www.ac-ks89.eu;
        access_log /var/log/nginx/appstore.access.log;
        error_log /var/log/nginx/appstore.error.log;

        location / {
          root /etc/nginx/html/html;
          index  index.html index.htm;
          try_files $uri $uri/ /index.html;
        }
    
        #     error_page  404              /404.html;
        #     error_page   500 502 503 504  /50x.html;
        #
        #     location = /50x.html {
        #       root   /usr/share/nginx/html;
        #     }

        location /api {
          # remember to add the trailing '/' at the end
          proxy_pass http://api-server-svc.ac.svc.cluster.local/;
          proxy_set_header X-Forwarded-For $remote_addr;
          proxy_set_header Host            $http_host;
          # Following is necessary for Websocket support
          #       proxy_http_version 1.1;
          #       proxy_set_header Upgrade $http_upgrade;
          #       proxy_set_header Connection "upgrade";
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ac-gui
  namespace: ac
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ac-gui
  template:
    metadata:
      labels:
        app: ac-gui
    spec:
      containers:
      - name: ac-gui
        image: ks89/ac-gui
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
        volumeMounts:
          - name: gui-config
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
            readOnly: true
#          - name: gui-config
#            mountPath: /etc/nginx/conf.d/default.conf
#            subPath: default.conf
      volumes:
        - name: gui-config
          configMap:
            name: gui-config
---
kind: Service
apiVersion: v1
metadata:
  name: ac-gui-svc
  namespace: ac
spec:
  type: LoadBalancer
  loadBalancerIP: 34.122.127.229
  selector:
    app: ac-gui
  ports:
    - name: http
      protocol: TCP
      # port exposes the Kubernetes service on the specified port within the cluster.
      # Other pods within the cluster can communicate with this server on the specified port.
      port: 80
      # TargetPort is the port on which the service will send requests to, that your pod will be listening on.
      # Your application in the container will need to be listening on this port also.
      targetPort: http
      # NodePort exposes a service externally to the cluster by means of the target nodes IP address and the NodePort.
      # NodePort is the default setting if the port field is not specified.
      # nodePort: 30036